name: Rust CI & Publish

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      publish:
        description: "Publicar en GitHub Packages?"
        required: false
        default: "false"

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      # IMPORTANTe: limpiar cualquier config previa del runner
      - name: Remove any cargo config
        run: rm -rf "$HOME/.cargo"

      # Build limpio: solo crates.io; el core se resuelve por path via [patch.crates-io]
      - name: Build workspace
        run: cargo build --workspace --all-targets --locked --verbose

      - name: Test workspace
        run: cargo test --workspace --locked --verbose

  publish:
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.publish == 'true' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      # Configurar SOLO para publicar al registry de GitHub
      - name: Configure Cargo registries (publish)
        run: |
          mkdir -p "$HOME/.cargo"
          cat > "$HOME/.cargo/config.toml" <<'CFG'
          [registries]
          github = { index = "sparse+https://pkgs.github.com/${{ github.repository_owner }}/index/" }
          CFG

      - name: Login (env token)
        env:
          CARGO_REGISTRIES_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "ok"

      # 1) Publica el CORE (version nueva)
      - name: Publish core
        env:
          CARGO_REGISTRIES_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cargo publish -p eventshop-messaging-core --registry github --allow-dirty

      - name: Wait for registry index propagation
        run: sleep 20

      # 2) Inyecta registry="github" en el adapter SOLO para publicar
      - name: Patch rabbitmq dependency to use github registry (temp)
        run: |
          sed -i \
            's/^eventshop-messaging-core = "[0-9]\+\.[0-9]\+\.[0-9]\+"/eventshop-messaging-core = { version = "0.1.2", registry = "github" }/' \
            eventshop-messaging-rabbitmq/Cargo.toml
          echo "Effective line:"
          grep -E '^eventshop-messaging-core' eventshop-messaging-rabbitmq/Cargo.toml

      # 3) Publica el adapter
      - name: Publish rabbitmq
        env:
          CARGO_REGISTRIES_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cargo publish -p eventshop-messaging-rabbitmq --registry github --allow-dirty
