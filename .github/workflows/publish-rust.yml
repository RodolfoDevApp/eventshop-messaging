name: Rust CI & Publish

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      publish:
        description: "Publicar en GitHub Packages?"
        required: false
        default: "false"

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      # Build y test en modo OFFLINE para no tocar ningun registry
      - name: Build workspace (offline)
        run: cargo build --workspace --all-targets --locked --offline --verbose

      - name: Test workspace (offline)
        run: cargo test --workspace --locked --offline --verbose

  publish:
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.publish == 'true' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      # Configurar alias 'github' SOLO para publicar
      - name: Configure Cargo registries (publish)
        run: |
          mkdir -p $HOME/.cargo
          cat > $HOME/.cargo/config.toml <<'CFG'
          [registries]
          github = { index = "sparse+https://pkgs.github.com/${{ github.repository_owner }}/index/" }
          CFG

      - name: Login (env token)
        env:
          CARGO_REGISTRIES_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "ok"

      # Publica primero el core (version nueva)
      - name: Publish core
        env:
          CARGO_REGISTRIES_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cargo publish -p eventshop-messaging-core --registry github --allow-dirty

      - name: Wait for registry index
        run: sleep 20

      # Luego el adapter de RabbitMQ (version nueva)
      - name: Publish rabbitmq
        env:
          CARGO_REGISTRIES_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cargo publish -p eventshop-messaging-rabbitmq --registry github --allow-dirty
