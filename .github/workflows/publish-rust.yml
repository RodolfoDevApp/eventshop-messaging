name: Publish Rust crates to GitHub Packages

on:
  workflow_dispatch:   # lo puedes lanzar manualmente
  push:
    tags:
      - "v*.*.*"       # o al pushear un tag semver

jobs:
  publish-core:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Configure Cargo registry (github)
        run: |
          mkdir -p ~/.cargo
          cat > ~/.cargo/config.toml <<'EOF'
          [registries]
          github = { index = "sparse+https://pkgs.github.com/RodolfoDevApp/index/" }
          EOF

      - name: Login to GitHub Packages
        env:
          CARGO_REGISTRIES_GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
        run: |
          # cargo usa el env CARGO_REGISTRIES_<NAME>_TOKEN si existe; no hace falta 'cargo login'
          echo "Token injected for registry 'github'"

      - name: Build workspace (sanity)
        run: cargo build --workspace

      - name: Publish core
        working-directory: eventshop-messaging-core
        env:
          CARGO_REGISTRIES_GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
        run: |
          cargo publish --registry github --no-verify

  publish-rabbitmq:
    needs: publish-core
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Configure Cargo registry (github)
        run: |
          mkdir -p ~/.cargo
          cat > ~/.cargo/config.toml <<'EOF'
          [registries]
          github = { index = "sparse+https://pkgs.github.com/RodolfoDevApp/index/" }
          EOF

      - name: Login to GitHub Packages
        env:
          CARGO_REGISTRIES_GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
        run: echo "Token injected"

      - name: Wait for core to propagate
        run: |
          # GitHub Packages suele estar listo en segundos; hacemos reintentos cortos
          for i in {1..10}; do
            cargo update -p eventshop-messaging-core && break || sleep 6
          done

      - name: Publish rabbitmq
        working-directory: eventshop-messaging-rabbitmq
        env:
          CARGO_REGISTRIES_GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
        run: |
          cargo publish --registry github --no-verify

