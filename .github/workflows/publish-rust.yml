name: Rust CI & Publish

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      publish:
        description: "Publicar en GitHub Packages?"
        required: false
        default: "false"

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      rabbitmq:
        image: rabbitmq:3.13-management
        ports:
          - 5672:5672
          - 15672:15672
        env:
          RABBITMQ_DEFAULT_USER: admin
          RABBITMQ_DEFAULT_PASS: admin
        options: >-
          --health-cmd="rabbitmq-diagnostics -q ping"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Remove runner cargo config file
        run: rm -f "$HOME/.cargo/config.toml"

      - name: Build workspace
        run: cargo build --workspace --all-targets --verbose

      - name: Wait for RabbitMQ
        run: |
          for i in {1..60}; do
            if nc -z 127.0.0.1 5672; then echo "RabbitMQ is up"; exit 0; fi
            echo "waiting RabbitMQ..."; sleep 2;
          done
          echo "RabbitMQ did not start in time" && exit 1

      - name: Test workspace (with RabbitMQ)
        run: |
          cargo test -p eventshop-messaging-rabbitmq --verbose
          cargo test --workspace --verbose

  publish:
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.publish == 'true' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Configure Cargo registries (publish)
        run: |
          mkdir -p "$HOME/.cargo"
          cat > "$HOME/.cargo/config.toml" <<'CFG'
          [registries]
          github = { index = "sparse+https://pkgs.github.com/${{ github.repository_owner }}/index/" }
          CFG

      - name: Read core version
        id: corever
        run: |
          ver=$(sed -n 's/^version\s*=\s*"\(.*\)".*/\1/p' eventshop-messaging-core/Cargo.toml | head -n1)
          echo "ver=$ver" >> "$GITHUB_OUTPUT"

      - name: Login (env token)
        env:
          CARGO_REGISTRIES_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "ok"

      - name: Publish core
        env:
          CARGO_REGISTRIES_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cargo publish -p eventshop-messaging-core --registry github --allow-dirty

      - name: Wait for registry index propagation
        run: sleep 20

      - name: Patch rabbitmq dependency to use github registry (temp)
        env:
          CORE_VER: ${{ steps.corever.outputs.ver }}
        run: |
          sed -i -E "s/^eventshop-messaging-core = .*/eventshop-messaging-core = { version = \"${CORE_VER}\", registry = \"github\" }/" eventshop-messaging-rabbitmq/Cargo.toml
          grep -E '^eventshop-messaging-core' eventshop-messaging-rabbitmq/Cargo.toml

      - name: Publish rabbitmq
        env:
          CARGO_REGISTRIES_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cargo publish -p eventshop-messaging-rabbitmq --registry github --allow-dirty
