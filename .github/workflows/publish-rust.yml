name: Build & (optional) Publish Rust crates

on:
  push:
    branches: [ main ]
  pull_request:
  # Ejecuta manualmente para publicar en GitHub Packages
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  OWNER: RodolfoDevApp
  REGISTRY_INDEX: sparse+https://pkgs.github.com/RodolfoDevApp/index/

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: CI build & tests (sin tocar tu repo)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      # Clave: en CI parcheamos la dependencia del registry a path local
      - name: Cargo config (patch only for CI)
        run: |
          mkdir -p ~/.cargo
          cat > ~/.cargo/config.toml <<'EOF'
          [registries]
          github = { index = "sparse+https://pkgs.github.com/RodolfoDevApp/index/" }

          # Evita ir a pkgs.github.com: resuelve eventshop-messaging-core desde el path local
          [patch.github]
          eventshop-messaging-core = { path = "eventshop-messaging-core" }
          EOF
          cat ~/.cargo/config.toml

      - name: Build workspace
        run: cargo build --workspace --all-targets --verbose

      - name: Tests (rabbitmq)
        run: cargo test -p eventshop-messaging-rabbitmq --verbose

  publish:
    name: Publish to GitHub Packages
    needs: build
    if: github.event_name == 'workflow_dispatch'   # Solo al dispararlo manualmente
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      # Config del registry (sin patch) para publicar
      - name: Cargo config (registry only)
        run: |
          mkdir -p ~/.cargo
          cat > ~/.cargo/config.toml <<'EOF'
          [registries]
          github = { index = "sparse+https://pkgs.github.com/RodolfoDevApp/index/" }
          EOF
          cat ~/.cargo/config.toml

      - name: Login to GitHub Packages
        # cargo login lee el token desde stdin
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | cargo login --registry github

      - name: Publish core
        run: cargo publish -p eventshop-messaging-core --registry github --verbose

      - name: Wait for index to update
        run: sleep 40

      - name: Publish rabbitmq
        run: cargo publish -p eventshop-messaging-rabbitmq --registry github --verbose
