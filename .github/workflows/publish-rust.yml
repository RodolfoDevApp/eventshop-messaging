name: Rust CI & Publish

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      publish:
        description: "Publicar en GitHub Packages?"
        required: false
        default: "false"   # pon "true" cuando quieras publicar

permissions:
  contents: read
  packages: write   # necesario para publicar con GITHUB_TOKEN

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      # NO configuramos registry aquÃ­ para build;
      # con el [patch.github] del root, el core se toma del path local.
      - name: Build workspace
        run: cargo build --workspace --all-targets --verbose

      - name: Test workspace
        run: cargo test --workspace --verbose

  publish:
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.publish == 'true' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      # Registrar el registry SOLO para publicar
      - name: Configure Cargo registries (github)
        run: |
          mkdir -p $HOME/.cargo
          cat > $HOME/.cargo/config.toml <<'CFG'
          [registries]
          github = { index = "sparse+https://pkgs.github.com/${{ github.repository_owner }}/index/" }
          CFG

      - name: Login (token via env)
        env:
          CARGO_REGISTRIES_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "ok"

      # IMPORTANTE: primero publica el core (version ya debe ser nueva)
      - name: Publish core
        env:
          CARGO_REGISTRIES_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cargo publish -p eventshop-messaging-core --registry github

      # Luego publica el rabbitmq (version nueva tambien)
      - name: Publish rabbitmq
        env:
          CARGO_REGISTRIES_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cargo publish -p eventshop-messaging-rabbitmq --registry github
