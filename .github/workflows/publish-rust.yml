# .github/workflows/publish-rust.yml
# Publica AUTOMATICAMENTE en crates.io: core primero y luego rabbitmq.
# Se dispara al pushear un tag semver (vX.Y.Z). No requiere pasos manuales.

name: Rust CI & Publish (crates.io)

on:
  push:
    tags:
      - "v*.*.*"   # crea un tag como v0.1.3 y pushealo; esto dispara la publicacion

permissions:
  contents: read

concurrency:
  group: publish-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      rabbitmq:
        image: rabbitmq:3.13-management
        ports: [ "5672:5672", "15672:15672" ]
        env:
          RABBITMQ_DEFAULT_USER: admin
          RABBITMQ_DEFAULT_PASS: admin
        options: >-
          --health-cmd="rabbitmq-diagnostics -q ping"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Ensure no runner cargo config leaks
        run: rm -f "$HOME/.cargo/config.toml"

      - name: Build workspace
        run: cargo build --workspace --all-targets --verbose

      - name: Wait for RabbitMQ
        run: |
          for i in {1..60}; do
            if nc -z 127.0.0.1 5672; then exit 0; fi
            echo "waiting RabbitMQ..."; sleep 2
          done
          exit 1

      - name: Test workspace (with RabbitMQ)
        run: |
          cargo test -p eventshop-messaging-rabbitmq --verbose
          cargo test --workspace --verbose

  publish:
    needs: build
    runs-on: ubuntu-latest
    env:
      # Token de crates.io: configura el secreto CRATES_IO_TOKEN en el repositorio
      CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
      CARGO_HTTP_MULTIPLEXING: "false"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Sanity print versions
        run: |
          echo "core:"
          grep -E '^(name|version) =' eventshop-messaging-core/Cargo.toml
          echo "rabbitmq:"
          grep -E '^(name|version) =' eventshop-messaging-rabbitmq/Cargo.toml
          echo "rabbitmq dep core:"
          grep -E '^eventshop-messaging-core' eventshop-messaging-rabbitmq/Cargo.toml || true

      - name: Publish core to crates.io (retry)
        run: |
          for i in 1 2 3; do
            cargo publish -p eventshop-messaging-core --allow-dirty && exit 0
            echo "publish core attempt $i failed; retrying in 10s..."; sleep 10
          done
          exit 1

      - name: Wait for crates.io index propagation
        run: sleep 40

      - name: Publish rabbitmq to crates.io (retry)
        run: |
          for i in 1 2 3; do
            cargo publish -p eventshop-messaging-rabbitmq --allow-dirty && exit 0
            echo "publish rabbitmq attempt $i failed; retrying in 10s..."; sleep 10
          done
          exit 1
